Index: app/src/main/java/com/swift/birdsofafeather/SearchStudentWithSimilarClasses.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.swift.birdsofafeather;\n\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.os.Bundle;\nimport android.view.View;\n\nimport com.swift.birdsofafeather.model.db.AppDatabase;\nimport com.swift.birdsofafeather.model.db.Class;\nimport com.swift.birdsofafeather.model.db.Student;\nimport com.swift.birdsofafeather.model.db.StudentWithClasses;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.UUID;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.Future;\n\npublic class SearchStudentWithSimilarClasses extends AppCompatActivity {\n    private AppDatabase db;\n    private UUID studentId;\n    private StudentWithClasses myself;\n    private Set<Class> myClasses;\n    private RecyclerView studentsRecyclerView;\n    private RecyclerView.LayoutManager studentsLayoutManager;\n    private StudentViewAdapter studentsViewAdapter;\n    private ExecutorService backgroundThreadExecutor = Executors.newSingleThreadExecutor();\n    private Future future;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_student_with_similar_classes);\n\n        this.future = backgroundThreadExecutor.submit(() -> {\n            db = AppDatabase.singleton(getApplicationContext());\n\n            SharedPreferences preferences = Utils.getSharedPreferences(this);\n            String UUIDString = preferences.getString(\"student_id\", \"\");\n            studentId = UUID.fromString(UUIDString);\n\n            myself = db.studentWithClassesDao().getStudent(studentId);\n            myClasses = myself.getClasses();\n            List<Student> myClassmates = findPriorClassmates();\n\n            for(Student classmate:myClassmates){\n                Set<Class> mateClasses = db.studentWithClassesDao().getStudent(classmate.studentId).getClasses();\n                mateClasses.retainAll(myClasses);\n                int count = mateClasses.size();\n                classmate.setCount(count);\n            }\n\n\n            runOnUiThread(() -> {\n                // Set up the recycler view to show our database contents\n                studentsRecyclerView = findViewById(R.id.persons_view);\n\n                studentsLayoutManager = new LinearLayoutManager(this);\n                studentsRecyclerView.setLayoutManager(studentsLayoutManager);\n\n                studentsViewAdapter = new StudentViewAdapter(myClassmates);\n                studentsRecyclerView.setAdapter(studentsViewAdapter);\n            });\n        });\n    }\n\n    protected List<Student> findPriorClassmates() {\n        List<StudentWithClasses> studentList = db.studentWithClassesDao().getAllStudentsExceptFor(studentId);\n\n        List<Student> commonClassmates = new ArrayList<>();\n        List<StudentWithClasses> tempCommon = new ArrayList<>();\n\n        for (StudentWithClasses classmate : studentList) {\n\n            if(countSimilarClasses(classmate) > 0) {\n                if(commonClassmates.size() == 0) {\n                    commonClassmates.add(classmate.getStudent());\n                    tempCommon.add(classmate);\n                } else if (countSimilarClasses(classmate) < countSimilarClasses(tempCommon.get(tempCommon.size()-1))) {\n                    commonClassmates.add(classmate.getStudent());\n                    tempCommon.add(classmate);\n                } else{\n                    for(int i=0; i<commonClassmates.size(); i++) {\n                        if(countSimilarClasses(classmate) >= countSimilarClasses(tempCommon.get(i))) {\n                            commonClassmates.add(i,classmate.getStudent());\n                            tempCommon.add(i,classmate);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return commonClassmates;\n    }\n\n    protected int countSimilarClasses(StudentWithClasses classmate){\n        Set<Class> mateClasses = classmate.getClasses();\n\n        mateClasses.retainAll(myClasses);\n\n        return mateClasses.size();\n    }\n\n    public int calculatePosition (Student classmate) {\n        myself = db.studentWithClassesDao().getStudent(studentId);\n        myClasses = myself.getClasses();\n        List<Student> myClassmates = findPriorClassmates();\n        for(int i=0; i<myClassmates.size(); i++) {\n            if(myClassmates.get(i).getId().equals(classmate.getId())){\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    //for milestone2's turn-off button\n    public void onToggle(View view) {\n        this.future.cancel(true);\n        //finish();\n    }\n\n    //public void\n    public void onAddStudentsClicked(View view){\n        Intent addStudentsIntent = new Intent(this, AddStudentActivity.class);\n        startActivity(addStudentsIntent);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/swift/birdsofafeather/SearchStudentWithSimilarClasses.java b/app/src/main/java/com/swift/birdsofafeather/SearchStudentWithSimilarClasses.java
--- a/app/src/main/java/com/swift/birdsofafeather/SearchStudentWithSimilarClasses.java	(revision 963d09be3ed71f953d3d99999093330c160747fe)
+++ b/app/src/main/java/com/swift/birdsofafeather/SearchStudentWithSimilarClasses.java	(date 1644731333884)
@@ -109,7 +109,7 @@
         return mateClasses.size();
     }
 
-    public int calculatePosition (Student classmate) {
+    public int APosition (Student classmate) {
         myself = db.studentWithClassesDao().getStudent(studentId);
         myClasses = myself.getClasses();
         List<Student> myClassmates = findPriorClassmates();
